{
  "hash": "848d586b556845010d91c58708ff924e",
  "result": {
    "markdown": "---\ntitle: \"Analizando las denuncias por homicidio doloso en el municipio de Tijuana, Baja California (2019) con R-Studio\"\nauthor: \"Francisco Reyes-Vázquez\"\ndate: \"2023-05-27\"\ncategories: [R, Violencia, Tijuana, Registros Administrativos]\nimage: \"cover.png\"\ntoc: true\ntoc-depth: 5\ntoc-title: Contenido\n---\n\n\n\n# Introducción\n\nEn esta ocasión se utilizaran los datos de la incidencia delictiva de la [Secretaría de Seguridad Ciudadana de Baja California](http://www.seguridadbc.gob.mx/) con el objetivo de identificar el comportamiento de las denuncia por homicidio doloso en el municipio de Tijuana. Cabe agregar que esta información es pública y representa el conteo de denuncias ciudadanas formales interpuestas ante la PGE en el 2019. También hay que considerar que los resultados de este análisis no representan el comportamiento del homicidio en el municipio de interés, sino a la frecuencia con la que se denuncia los hechos. Esto significa que, la información aquí plasmada se encuentra muy por debajo de los homicidios reales, pero podría ser un reflejo de ellos.\n\n# Importar datos\n\nPara iniciar, vamos a llamar a las librerías que vamos a utilizar en todo el proyecto. En caso de no estar instaladas, será necesario utilizar la función `install.packages()` y el paquete que haga falta. Para importar los datos de la [Secretaría de Seguridad Ciudadana de Baja California](http://www.seguridadbc.gob.mx/), primero se hará una conexión entre el repositorio de origen y nuestro entorno de R por medio de la función `download.file()`, a la cual se le proporcionará la dirección `url` de la base de datos y un nombre genérico para guardarla. Posteriormente se utilizará la función `read.csv()` para importar el conjunto de datos descargado en el paso anterior.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Biblioteca \nlibrary(tidyverse)\nlibrary(ggforce)\nlibrary(tinter)\nlibrary(showtext)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Descargar archivo CSV de Google Drive\ndownload.file(\"https://drive.google.com/uc?id=1mAUUFLni8YnZQfNnV9TgQB3nNiPq1Npe&export=download\", destfile = \"incidencia_Tijuana2019.csv\")\n\n#Importar datos CSV descargados\ndata <- read.csv(\"incidencia_Tijuana2019.csv\")\n```\n:::\n\n\nCon ayuda de la función `glimpse()`, podemos explorar las dimensiones del archivo y visualizar los primeros casos. Como se puede observar más abajo, nuestra base de datos se compone de 7 variables y 21,691 observaciones. Al analizar la estructura es posible determinar que cada observación equivale a un reporte y cada variable a las características de dicho reporte. La descripción de las variables de muestra a continuación:\n\n1.  `DELITO`, tipo de delito denunciado\n2.  `CLAS_DEL`, tipo de delito registrado\n3.  `COLONIA_DEL`, colonia en la que ocurrió el delito\n4.  `FECHA_REG`, fecha en la que se registró el delito\n5.  `FECHA_DEL`, fecha en la que ocurrió el delito\n6.  `HORA_DEL`, hora en la que ocurrió el delito\n7.  `MUNICIPIO`, municipio en el que ocurrió el delito\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Explorar base de datos\nglimpse(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 21,691\nColumns: 7\n$ DELITO      <chr> \"ROBO DE VEHÍCULO\", \"ROBO DE VEHÍCULO\", \"ROBO DE VEHÍCULO\"…\n$ CLAS_DEL    <chr> \"ROBO DE VEHÍCULO\", \"ROBO DE VEHÍCULO\", \"ROBO DE VEHÍCULO\"…\n$ COLONIA_DEL <chr> \"INFONAVIT CACHANILLAS\", \"LOS SANTOS\", \"RESIDENCIAL AGUA C…\n$ FECHA_REG   <chr> \"01/01/19\", \"01/01/19\", \"01/01/19\", \"11/01/19\", \"02/01/19\"…\n$ FECHA_DEL   <chr> \"01/01/19\", \"01/01/19\", \"01/01/19\", \"11/01/19\", \"21/12/18\"…\n$ HORA_DEL    <chr> \"0:00\", \"0:00\", \"0:00\", \"0:00\", \"0:00\", \"0:00\", \"0:00\", \"0…\n$ MUNICIPIO   <chr> \"TIJUANA\", \"TIJUANA\", \"TIJUANA\", \"TIJUANA\", \"TIJUANA\", \"TI…\n```\n:::\n:::\n\n\nPara este ejercicio, nos vamos a concentrar en los reportes por homicidio que se realizaron en el municipio de Tijuana para el año 2019. Entonces será necesario explorar la variable `DELITO` y posteriormente filtrar por ella misma. Para ello usaremos la función `table()` y `filter()`, respectivamente. Apenas 2,012 reportes fueron clasificados como homicidios violentos, por lo que de aquí en adelante trabajaremos solo con ese número de observaciones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Explorar variable de tipo delito\ntable(data$DELITO)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n    HOMICIDIO CALIFICADO (VIOLENTO)                   LESIONES CULPOSAS \n                               2012                                 893 \n             LESIONES INTENCIONALES             LESIONES INTENCIONALES  \n                               1988                                   4 \n        ROBO  EN GRADO DE TENTATIVA                       ROBO A BANCO  \n                                  3                                   3 \n         ROBO A BANCO SIN VIOLENCIA   ROBO CALIFICADO A CASA HABITACIÓN \n                                  1                                1272 \n         ROBO CALIFICADO A COMERCIO     ROBO CALIFICADO A LUGAR CERRADO \n                                358                                 430 \nROBO CALIFICADO CONTRA DEPENDIENTES      ROBO CALIFICADO DE DEPENDIENTE \n                                 13                                 143 \n       ROBO CALIFICADO DE DOMÉSTICO        ROBO CALIFICADO DE HUÉSPEDES \n                                  1                                   2 \n                 ROBO CON VIOLENCIA                 ROBO CON VIOLENCIA  \n                               2204                                  34 \n          ROBO CON VIOLENCIA A CASA       ROBO CON VIOLENCIA A COMERCIO \n                                124                                2331 \n                   ROBO DE VEHÍCULO      ROBO DE VEHÍCULO CON VIOLENCIA \n                               6670                                1244 \n         ROBO EN GRADO DE TENTATIVA           ROBO EN TERRENOS RÚSTICOS \n                                 20                                   1 \n                    ROBO EQUIPARADO                    ROBO EQUIPARADO  \n                                 26                                   3 \n            ROBO GRADO DE TENTATIVA                   ROBO POR QUERELLA \n                                  1                                  72 \n                        ROBO SIMPLE              SECUESTRO (CONFIRMADO) \n                               1830                                   8 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Filtrar los homicidios\ndata%>%\n  filter(DELITO==\"HOMICIDIO CALIFICADO (VIOLENTO)\")->hom\n```\n:::\n\n\nLa función `filter()` deberá proporcionarnos una nueva base de datos que nombraremos `hom`. Esta base deberá contener 2,012 observaciones y las mismas 7 variables originales. El siguiente paso será explorar y limpiar cada una de las variables de interés para este análisis. Primero vamos a revisar la fecha de ocurrencia del delito `FECHA_DEL`, misma que se compone de día, mes y año (`dd/mm/yy`). Nosotros vamos a extraer únicamente el mes con ayuda de la función `separate()`, y posteriormente vamos a agrupar y contar el número de casos por mes con la función `group_by()` y la función `count()`, respectivamente. El resultado vamos a colocarlo en un objeto que nombraremos `hom_month`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Explorar la variable fecha del delito\ntable(hom$FECHA_DEL)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n01/01/19 01/02/19 01/03/19 01/04/19 01/05/19 01/06/19 01/07/19 01/08/19 \n       7        6        3        5        5        9        9        8 \n01/09/19 01/10/19 01/11/19 01/12/19 02/01/19 02/02/19 02/03/19 02/04/19 \n       6       10        7        5        8       11        5        4 \n02/05/19 02/06/19 02/07/19 02/08/19 02/09/19 02/10/19 02/11/19 02/12/19 \n      12        1        8        4        3        3        4        7 \n03/01/19 03/02/19 03/03/19 03/04/19 03/05/19 03/06/19 03/07/19 03/08/19 \n      11        5        9        4        6        3       12        3 \n03/09/19 03/10/19 03/11/19 03/12/19 04/01/19 04/02/19 04/03/19 04/04/19 \n       4        6        9        5        8        9        6        9 \n04/05/19 04/06/19 04/07/19 04/08/19 04/09/19 04/10/19 04/11/19 04/12/19 \n       5        3        6        7        2        3        2        6 \n05/01/19 05/02/19 05/03/19 05/04/19 05/05/19 05/06/19 05/07/19 05/08/19 \n       6        3        5        5        4        8        5        3 \n05/09/19 05/10/19 05/11/19 05/12/19 06/01/19 06/02/19 06/03/19 06/04/19 \n       5        5        9        3        4        6        3        5 \n06/05/19 06/06/19 06/07/19 06/08/19 06/09/19 06/10/19 06/11/19 06/12/19 \n       8        5       10        6        9        2        2        4 \n07/01/19 07/02/19 07/03/19 07/04/19 07/05/19 07/06/19 07/07/19 07/08/19 \n      14        4        6        4        5        8       11        3 \n07/09/19 07/10/19 07/11/19 07/12/19 08/01/19 08/02/19 08/03/19 08/04/19 \n       3        8        7        1        9        5        1        5 \n08/05/19 08/06/19 08/07/19 08/08/19 08/09/19 08/10/19 08/11/19 08/12/19 \n       3        8       10        8        8        4        3        7 \n09/01/19 09/02/19 09/03/19 09/04/19 09/05/19 09/06/19 09/07/19 09/08/19 \n       5        6        5        4        6        5        8        4 \n09/09/19 09/10/19 09/11/19 09/12/19 10/01/19 10/02/19 10/03/19 10/04/19 \n       5        3        5        9        6        6        4        6 \n10/05/19 10/06/19 10/07/19 10/08/19 10/09/19 10/10/19 10/11/19 10/12/19 \n       1        5        6        5        5        2        6        5 \n11/01/19 11/02/19 11/03/19 11/04/19 11/05/19 11/06/19 11/07/19 11/08/19 \n       6        1        3        4        5        9        8        5 \n11/09/19 11/10/19 11/11/19 11/12/19 12/01/19 12/02/19 12/03/19 12/04/19 \n       8        6        5        3        9        2        3        4 \n12/05/19 12/06/19 12/07/19 12/08/19 12/09/19 12/10/19 12/11/19 12/12/19 \n       4        7        6        4        2        3        4        5 \n13/01/19 13/02/19 13/03/19 13/04/19 13/05/19 13/06/19 13/07/19 13/08/19 \n       6        4        3        3       10        5       11        6 \n13/09/19 13/10/19 13/11/19 13/12/19 14/01/19 14/02/19 14/03/19 14/04/19 \n       9        6       10        4        5        5        9        5 \n14/05/19 14/06/19 14/07/19 14/08/19 14/09/19 14/10/19 14/11/19 14/12/19 \n       6       11        4        4        3        9        6        6 \n15/01/19 15/02/19 15/03/19 15/04/19 15/05/19 15/06/19 15/07/19 15/08/19 \n       4        7        5        4        3        8        1        8 \n15/09/19 15/10/19 15/11/19 15/12/19 16/01/19 16/02/19 16/03/19 16/04/19 \n       5        3        2        4        7        8       10        7 \n16/05/19 16/06/19 16/07/19 16/08/19 16/09/19 16/10/19 16/11/19 16/12/19 \n       6        7        5        7       10        7        8        6 \n17/01/19 17/02/19 17/03/19 17/04/19 17/05/19 17/06/19 17/07/19 17/08/19 \n       4        6        5        4        6        6        6        7 \n17/09/19 17/10/19 17/11/19 17/12/19 18/01/19 18/02/19 18/03/19 18/04/19 \n       3        2        3        2        5        1        6       11 \n18/05/19 18/06/19 18/07/19 18/08/19 18/09/19 18/10/19 18/11/19 18/12/19 \n      10        7        3        8        2        2        7        5 \n19/01/19 19/02/19 19/03/19 19/04/19 19/05/19 19/06/19 19/07/19 19/08/19 \n       2        8        4        5        6        8        7        9 \n19/09/19 19/10/19 19/11/19 19/12/19 20/01/19 20/02/19 20/03/19 20/04/19 \n       6        3       12        4       10        3        6        6 \n20/05/19 20/06/19 20/07/19 20/08/19 20/09/19 20/10/19 20/11/19 20/12/19 \n       4       11        5        2        7        4        5        3 \n21/01/19 21/02/19 21/03/19 21/04/19 21/05/19 21/06/19 21/07/19 21/08/19 \n       1        7        4        6        8        7        5        5 \n21/09/19 21/10/19 21/11/19 21/12/19 22/01/19 22/02/19 22/03/19 22/04/19 \n       9        3        5        5        4        2        5        7 \n22/05/19 22/06/19 22/07/19 22/08/19 22/09/19 22/10/19 22/11/19 22/12/19 \n       4        1        7        2        7        5        5        7 \n23/01/19 23/03/19 23/04/19 23/05/19 23/06/19 23/07/19 23/08/19 23/09/19 \n       7        3        7        8        5        2        7        7 \n23/10/19 23/11/19 23/12/19 24/01/19 24/02/19 24/03/19 24/04/19 24/05/19 \n       9        3        4        7        6        3        9        2 \n24/06/19 24/07/19 24/08/19 24/09/19 24/10/19 24/11/19 24/12/19 25/01/19 \n       4        5        9        9        6        5        3        5 \n25/02/19 25/03/19 25/04/19 25/05/19 25/06/19 25/07/19 25/08/19 25/09/19 \n       3        3        9        5        9        6        9        6 \n25/10/19 25/11/19 25/12/19 26/01/19 26/02/19 26/03/19 26/04/19 26/05/19 \n       4        3        5        7        6        5        3        6 \n26/06/19 26/07/19 26/08/19 26/09/19 26/10/19 26/11/19 26/12/19 27/01/19 \n       5        6        6        5        5        5        6        6 \n27/02/19 27/03/19 27/04/19 27/05/19 27/06/19 27/07/19 27/08/19 27/09/19 \n       5        2        4        9        4       10        5        4 \n27/10/19 27/11/19 27/12/19 28/01/19 28/02/19 28/03/19 28/04/19 28/05/19 \n       1        6        4        2        4        6        7        7 \n28/06/19 28/07/19 28/08/19 28/09/19 28/10/19 28/11/19 28/12/19 29/01/19 \n       5        5        5        5        9        3        3        6 \n29/03/19 29/04/19 29/05/19 29/06/19 29/07/19 29/08/19 29/09/19 29/10/19 \n       4        5        4        7       10        8        5        2 \n29/11/19 29/12/19 30/01/19 30/03/19 30/04/19 30/05/19 30/06/19 30/07/19 \n       4        3        9        4        3       10       11        4 \n30/08/19 30/09/19 30/10/19 30/11/19 30/12/19 31/01/19 31/03/19 31/05/19 \n      10        4        4        8        5        4        2        2 \n31/07/19 31/08/19 31/10/19 31/12/19 \n       2        7        5        2 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Separar la variable en día, mes y año\nhom<-separate(hom,FECHA_DEL, c(\"day\",\"month\",\"year\"), sep = \"/\")\n\n#Agrupar y contar\nhom%>%\n  group_by(month)%>%\n  count()->hom_month\n\n#Explorar la nueva base de casos por mes\nglimpse(hom_month)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 12\nColumns: 2\nGroups: month [12]\n$ month <chr> \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\"…\n$ n     <int> 194, 139, 142, 164, 180, 192, 203, 184, 166, 144, 163, 141\n```\n:::\n:::\n\n\nLa nueva base de datos llamada `hom_month` contiene 2 variables: una que corresponde al número de meses del año (`month`) y otra que realiza un conteo de reportes de homicidio por mes (`n`). El siguiente paso será revisar la hora de ocurrencia del delito `HORA_DEL`, misma que se compne de horas y minutos (`hh:mm`). Para este caso, vamos a separar las horas de los minutos con ayuda de la función `separate()`, y después vamos a agurpuar y contar el número de casos por hora con la función `group_by()` y la función `count()`. El resultado vamos a colocarlo en un objeto que nombraremos `hom_hrs`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Separar en horas y minutos\nhom<-separate(hom,HORA_DEL, c(\"hours\",\"minutes\"), sep = \":\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Agrupar y contar \nhom%>%\n  group_by(hours)%>%\n  count()->hom_hr\n\n#Explorar la nueva base de casos por hora\nglimpse(hom_hr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 25\nColumns: 2\nGroups: hours [25]\n$ hours <chr> \"\", \"0\", \"1\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"1…\n$ n     <int> 1, 62, 68, 87, 74, 93, 91, 95, 82, 103, 98, 92, 103, 36, 110, 12…\n```\n:::\n:::\n\n\nLa nueva base de datos llamada `hom_hr` contiene 2 variables: una que corresponde al número de horas (`hours`) y otra que realiza un conteo de reportes de homicidio por hora (`n`). Cabe agregar que se esperaría que el número de filas de este conjunto de datos fuera de 24 en alusión a las 24 horas que dura un día. No obstante, se encontró un caso perdido del cual se desconoce la hora en que ocurrió y que más adelante se resolverá. Con esta información ya estamos listos para visualizar los datos.\n\n# Graficando las denuncias por homicidio\n\nEn este punto, tenemos dos bases de datos: `hom_month` que contiene la frecuencia de denuncias de homicidio por mes y `hom_hr` que contiene la frecuencia de denuncias de homicidio por hora. Con esta información procederemos a representar el comportamiento de las denuncias por homicidio presentadas ante la FGE en Tijuana, Baja California, 2019. Para representar la información por mes, se utilizará el denominado Lollipop Chart y para los homicidios por horas haremos uso del Circular Histogram.\n\n### Homicidios por mes\n\nPara representar los homicidios por mes vamos a utilizar la base de datos `hom_month` que ya hemos trabajado y se encuentra en nuestro entorno de desarrollo. Empezaremos por escribir la función `ggplot()` en la cual se introduce la base de datos y el eje de x y y. Además, agregaremos la función `geom_segment()` y `geom_point()` para señalar que queremos un *Lollipop Chart*. De aquí en adelante las demás líneas de código solo brindan estilo a la gráfica.\n\nPor ejemplo, las funciones `geom_mark_ellipse()` sirve para poner leyendas estilizadas, `labs()` para poner títulos a la gráfica y a sus ejes, `scale_y_continuos()` para personalizar la escala de los ejes, `theme()` para editar colores, cajas y tipos de letras del grafico, mientras que la función `annotate()` sirve para poner anotaciones. Para más información se recomienda revisar la documentación en la pestaña `help` de R Studio o escribir la función `help()` y dentro del paréntesis la función que se desea consultar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add_google(\"Oswald\", \"Oswald\")\nfont_add_google(\"Manrope\", \"Manrope\")\nshowtext_auto()\n\n\nggplot(hom_month,aes(x=month,y=n))+\n  geom_segment(aes(x=month, xend=month, y=0, yend=n),color=\"gray\")+\n  geom_point(color=\"#D77D10\", size=3)+\n  geom_mark_ellipse(aes(filter = n==194, label = \"194 homicidios\", \n                        description = \"Segundo mes más violento\"),label.fontsize = 8,\n                    con.border=\"all\",con.size = 0.3)+\n  geom_mark_ellipse(aes(filter = n==203, label = \"203 homicidios\", \n                        description = \"Primer mes más violento\"),label.fontsize = 8,\n                    con.border=\"all\",con.size = 0.3)+\n  geom_mark_ellipse(aes(filter = n==192, label = \"192 homicidios\", \n                        description = \"Tercer mes más violento\"),label.fontsize = 8,\n                    con.border=\"all\",con.size = 0.3,label.buffer = unit(26, \"mm\"))+\n  annotate(\"rect\", xmin = \"08\", xmax = \"12\", \n             ymin = 200, ymax = 250, alpha = .2)+\n  annotate(\"text\", x=\"10\", y = 225, size=3,\n    label =\"Durante el 2019 se interpusieron\\n 2,012 denuncas por homicidio.\")+\n  theme(axis.text=element_text(family='Manrope', color=\"gray20\"),\n        axis.title=element_text(family='Manrope',color=\"gray20\"),\n        legend.text=element_text(family='Manrope',color=\"gray20\"),\n        plot.title = element_text(family=\"Oswald\",size=20,color=\"gray20\"),\n        plot.subtitle = element_text(family = \"Manrope\",size=12,color=\"gray20\"),\n        plot.caption = element_text(family = \"Manrope\",size=8,color=\"gray20\"))+\n  labs(title = \"INCIDENCIA DELICTIVA POR MES EN TIJUANA, 2019\",\n  subtitle=\"Denuncias interpuestas ante la PGE por homicidio doloso\",\n       y=\"Frecuencia\", x=\"\",caption = \"Fuente: Elaboración propia con datos de la\\n Secretaría de Seguridad Ciudadana de Baja California\")+\n  scale_y_continuous(limits = c(0,300))+\n  scale_x_discrete(labels=c(\"01\"=\"ENE\",\"02\"=\"FEB\",\"03\"=\"MAR\",\n                            \"04\"=\"ABR\",\"05\"=\"MAY\",\"06\"=\"JUN\",\n                            \"07\"=\"JUL\",\"08\"=\"AGO\",\"09\"=\"SEP\",\n                            \"10\"=\"OCT\",\"11\"=\"NOV\",\"12\"=\"DIC\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### Homicidios por hora\n\nPara representar los homicidios por hora vamos a utilizar la base de datos `hom_hr` que ya hemos trabajado y se encuentra en nuestro entorno de desarrollo. En esta ocasión vamos a realizar un procedimiento de formato antes de graficar. La idea es darle una etiqueta diferente a la variable `hours` mediante las funciones `mutate()` y `case_when()`. Con ellas vamos a crear una variable nueva llamada `hrs2` la cual estará dada en función de ciertas condiciones que se muestran a continuación. El resultado se introducirá en la misma base `hom_hr`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhom_hr<-hom_hr%>%\n  mutate(hrs2=case_when\n         (hours==\"0\"~\"00:00 hrs\",hours==\"1\"~\"01:00 hrs\",hours==\"2\"~\"02:00 hrs\",\n          hours==\"3\"~\"03:00 hrs\",hours==\"4\"~\"04:00 hrs\",hours==\"5\"~\"05:00 hrs\",\n          hours==\"6\"~\"06:00 hrs\",hours==\"7\"~\"07:00 hrs\",hours==\"8\"~\"08:00 hrs\",\n          hours==\"9\"~\"09:00 hrs\",hours==\"10\"~\"10:00 hrs\",hours==\"11\"~\"11:00 hrs\",\n          hours==\"12\"~\"12:00 hrs\",hours==\"13\"~\"13:00 hrs\",hours==\"14\"~\"14:00 hrs\",\n          hours==\"15\"~\"15:00 hrs\",hours==\"16\"~\"16:00 hrs\",hours==\"17\"~\"17:00 hrs\",\n          hours==\"18\"~\"18:00 hrs\",hours==\"19\"~\"19:00 hrs\",hours==\"20\"~\"20:00 hrs\",\n          hours==\"21\"~\"21:00 hrs\",hours==\"22\"~\"22:00 hrs\",hours==\"23\"~\"23:00 hrs\"))%>%\n  na.omit() #Eliminar el NA que se localizó en pasos anteriores\n```\n:::\n\n\n\nPara empezar, utilizaremos la función ggplot() en la cual se introduce la base de datos y el eje de `x` y `y`. Además, agregaremos la función `geom_col()` para señalar que queremos una grafica de barras. Para convertirlo en un circulo se utiliza la función `coord_polar()` y se agregar puntos con la función `geom_point()`. Para crear una escala de colores personalidad se recomienda ver la documentación del paquete `tinter` tal y como se muestra a continuación: `help(tinter)`. Yo elegí el color naranja, pero se puede colocar cualquier color, incluso colores HTML. De aquí en adelante las demás líneas de código solo brindan estilo a la gráfica.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add_google(\"Oswald\", \"Oswald\")\nfont_add_google(\"Manrope\", \"Manrope\")\nshowtext_auto()\n\n\nggplot(hom_hr, aes(x=hrs2,y=n,fill=n))+\n  geom_col(position=\"dodge\")+\n  coord_polar()+\n  geom_point()+\n  scale_fill_gradientn(colors=tinter(\"#D77D10\"))+\n  geom_mark_circle(aes(filter=n==123, label = \"123 Homicidios\", \n                       description = \"Primera hora más violenta\"),label.fontsize = 8,\n                   label.buffer = unit(10, \"mm\"),con.border=\"all\",con.cap = 2,con.size = 0.4)+\n  geom_mark_circle(aes(filter=n==110, label = \"110 Homicidios\", \n                       description = \"Segunda hora más violenta\"),label.fontsize = 8,\n                   label.buffer = unit(27.5, \"mm\"),con.border=\"all\",con.cap=1,con.size = 0.4 )+\n  ylim(-125,125)+\n  theme(axis.text=element_text(family='Manrope', color=\"gray20\"),\n        axis.title=element_text(family='Manrope',color=\"gray20\"),\n        legend.text=element_text(family='Manrope',color=\"gray20\"),\n        plot.title = element_text(family=\"Oswald\",size=20,color=\"gray20\"),\n        plot.subtitle = element_text(family = \"Manrope\",size=12,color=\"gray20\"),\n        plot.caption = element_text(family = \"Manrope\",size=8,color=\"gray20\"))+\n  labs(title = \"INCIDENCIA DELICTIVA POR HORA EN TIJUANA, 2019\",\n       subtitle=\"Denuncias interpuestas ante la PGE por homicidio doloso\",\n       fill=\"Frecuencia\",x=\"\",y=\"\",caption = \"Fuente: Elaboración propia con datos de la\\nSecretaría de Seguridad Ciudadana de Baja California\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=768}\n:::\n:::\n\n\n# Conclusiones\n\nSe estima que en el 2019 ocurrieron 2,012 homicidios que fueron denunciados ante la autoridad pertinente. Los meses en los que se reportó mayor número de denuncias interpuestas por homicidio doloso en ese año fueron julio con 203, enero con 294 y junio con 292 denuncias. La tendencia muestra que el homicidio sigue una distribución normal, con alta incidencia a mitad del año. Sin embargo, el mes de enero rompe con esa distribución, situación que podría ser causa de otro factor no aleatorio. Por su parte, las horas en las que se suscitaron más denuncias por homicidio fueron las 9:00 y 8:00 de la noche. El comportamiento de estos datos muestra que conforme se acerca la noche, los homicidios tienden a aumentar. Siendo las 2:00, las 4:00 y las 5:00 de la tarde, las horas en las que ocurrieron menos homicidios denunciados.\n\n\n\n\n::: {.callout-note title=\"¿Cómo citar este *post*?\"}\n\n## ¿Cómo citar este post?\nReyes-Vázquez, F. (27 de mayo del 2023). Analizando las denuncias por homicidio doloso en el municipio de Tijuana, Baja California (2019) con R-Studio. Mi Blog. https://www.bibguru.com/es/g/cita-apa-publicacion-de-blog/\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}